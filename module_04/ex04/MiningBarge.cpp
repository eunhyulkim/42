#include "MiningBarge.hpp"

/* ************************************************************************** */
/* ---------------------------- STATIC VARIABLE ----------------------------- */
/* ************************************************************************** */


/* ************************************************************************** */
/* ------------------------------ CONSTRUCTOR ------------------------------- */
/* ************************************************************************** */

MiningBarge::MiningBarge()
{
	for (int i = 0; i < 4; i++)
		this->m_srcs[i] = nullptr;
	this->m_count = 0;
}

MiningBarge::MiningBarge(const MiningBarge& copy) 
{
	this->m_count = copy.get_m_count();
	for (int i = 0; i < this->m_count; i++)
		this->m_srcs[i] = copy.m_srcs[i];
}

/* ************************************************************************** */
/* ------------------------------- DESTRUCTOR ------------------------------- */
/* ************************************************************************** */

MiningBarge::~MiningBarge() {
	this->m_count = 0;
}

/* ************************************************************************** */
/* -------------------------------- OVERLOAD -------------------------------- */
/* ************************************************************************** */

MiningBarge& MiningBarge::operator=(const MiningBarge& obj)
{
	if (this == &obj)
		return (*this);
	this->~MiningBarge();
	this->m_count = obj.get_m_count();
	for (int i = 0; i < this->m_count; i++)
		this->m_srcs[i] = obj.m_srcs[i];
	return (*this);
}

/* ************************************************************************** */
/* --------------------------------- GETTER --------------------------------- */
/* ************************************************************************** */

int MiningBarge::get_m_count() const { return (this->m_count); }

/* ************************************************************************** */
/* --------------------------------- SETTER --------------------------------- */
/* ************************************************************************** */

/* ************************************************************************** */
/* ------------------------------- EXCEPTION -------------------------------- */
/* ************************************************************************** */

/* exception code */

/* ************************************************************************** */
/* ---------------------------- MEMBER FUNCTION ----------------------------- */
/* ************************************************************************** */

void
MiningBarge::equip(IMiningRaser* miner)
{
	int i;

	if (this->m_count >= 4)
		return ;
	i = 0;
	while (i <= this->m_count)
		if (this->m_srcs[i++] == miner)
			return ;
	this->m_srcs[this->m_count] = miner;
	this->m_count += 1;
}

void
MiningBarge::mine(IAsteroid* obj) const
{
	int i;

	i = 0;
	while (i < this->m_count)
		this->m_srcs[i++]->mine(obj);
}
