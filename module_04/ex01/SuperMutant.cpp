#include "SuperMutant.hpp"

/* ************************************************************************** */
/* ---------------------------- STATIC VARIABLE ----------------------------- */
/* ************************************************************************** */

/* static variable code */

/* ************************************************************************** */
/* ------------------------------ CONSTRUCTOR ------------------------------- */
/* ************************************************************************** */

SuperMutant::SuperMutant()
: Enemy(170, "Super Mutant")
{
	std::cout << "Gaaah. Me want smash heads!" << std::endl;
}

SuperMutant::SuperMutant(const SuperMutant& copy)
: Enemy(copy)
{
	std::cout << "Gaaah. Me want smash heads!" << std::endl;
}

/* ************************************************************************** */
/* ------------------------------- DESTRUCTOR ------------------------------- */
/* ************************************************************************** */

SuperMutant::~SuperMutant()
{
	std::cout << "Aaargh..." << std::endl;
}

/* ************************************************************************** */
/* -------------------------------- OVERLOAD -------------------------------- */
/* ************************************************************************** */

SuperMutant& SuperMutant::operator=(const SuperMutant& obj)
{
	if (this == &obj)
		return (*this);
	this->Enemy::operator=(obj);
	return (*this);
}

void
SuperMutant::takeDamage(int damage) {
	damage -= 3;
	if (damage > this->get_m_hp())
		damage = this->get_m_hp();
	std::cout << "take " << damage;
	std::cout << " damage, remain hp is ";
	this->m_hp -= damage;
	if (this->get_m_hp() < 0)
		this->m_hp = 0;
	std::cout << this->get_m_hp() << std::endl;
}

/* ************************************************************************** */
/* --------------------------------- GETTER --------------------------------- */
/* ************************************************************************** */

/* ************************************************************************** */
/* --------------------------------- SETTER --------------------------------- */
/* ************************************************************************** */

/* ************************************************************************** */
/* ------------------------------- EXCEPTION -------------------------------- */
/* ************************************************************************** */

/* ************************************************************************** */
/* ---------------------------- MEMBER FUNCTION ----------------------------- */
/* ************************************************************************** */

