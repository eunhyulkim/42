#include "AMateria.hpp"

/* ************************************************************************** */
/* ---------------------------- STATIC VARIABLE ----------------------------- */
/* ************************************************************************** */


/* ************************************************************************** */
/* ------------------------------ CONSTRUCTOR ------------------------------- */
/* ************************************************************************** */

AMateria::AMateria() {}
AMateria::AMateria(const std::string& type) : m_type(type), m_xp(0) {}

AMateria::AMateria(const AMateria& copy)
: m_type(copy.get_m_type(), copy.get_m_xp()) {}

/* ************************************************************************** */
/* ------------------------------- DESTRUCTOR ------------------------------- */
/* ************************************************************************** */

AMateria::~AMateria()
{
	this->m_type.clear();
	this->m_xp = 0;
}

/* ************************************************************************** */
/* -------------------------------- OVERLOAD -------------------------------- */
/* ************************************************************************** */

AMateria& AMateria::operator=(const AMateria& obj)
{
	if (this == &obj)
		return (*this);
	this->m_type = obj.get_m_type();
	this->m_xp = obj.get_m_xp();
	return (*this);
}

/* ************************************************************************** */
/* --------------------------------- GETTER --------------------------------- */
/* ************************************************************************** */

std::string AMateria::get_m_type() const { return (this->m_type); }
unsigned int AMateria::get_m_xp() const { return (this->m_xp); }

/* ************************************************************************** */
/* --------------------------------- SETTER --------------------------------- */
/* ************************************************************************** */

/* ************************************************************************** */
/* ------------------------------- EXCEPTION -------------------------------- */
/* ************************************************************************** */

/* exception code */

/* ************************************************************************** */
/* ---------------------------- MEMBER FUNCTION ----------------------------- */
/* ************************************************************************** */

void
AMateria::use(ICharacter& target) {
	this->m_xp += 10; (void)target;
}
