#include "AWeapon.hpp"

/* ************************************************************************** */
/* ---------------------------- STATIC VARIABLE ----------------------------- */
/* ************************************************************************** */


/* ************************************************************************** */
/* ------------------------------ CONSTRUCTOR ------------------------------- */
/* ************************************************************************** */

AWeapon::AWeapon() {}
AWeapon::AWeapon(const std::string& name, int apcost, int damage)
: m_name(name), m_apcost(apcost), m_damage(damage) {}

AWeapon::AWeapon(const AWeapon& copy)
: m_name(copy.get_m_name()), m_apcost(copy.get_m_apcost()), m_damage(copy.get_m_damage()) {}

/* ************************************************************************** */
/* ------------------------------- DESTRUCTOR ------------------------------- */
/* ************************************************************************** */

AWeapon::~AWeapon()
{
	this->m_name.clear();
	this->m_apcost = 0;
	this->m_damage = 0;
}

/* ************************************************************************** */
/* -------------------------------- OVERLOAD -------------------------------- */
/* ************************************************************************** */

AWeapon& AWeapon::operator=(const AWeapon& obj)
{
	if (this == &obj)
		return (*this);
	this->m_name = obj.get_m_name();
	this->m_apcost = obj.get_m_apcost();
	this->m_damage = obj.get_m_damage();
	/* overload= code */
	return (*this);
}

/* ************************************************************************** */
/* --------------------------------- GETTER --------------------------------- */
/* ************************************************************************** */

std::string AWeapon::get_m_name() const { return (this->m_name); }
int AWeapon::get_m_apcost() const { return (this->m_apcost); }
int AWeapon::get_m_damage() const { return (this->m_damage); }

/* ************************************************************************** */
/* --------------------------------- SETTER --------------------------------- */
/* ************************************************************************** */

/* ************************************************************************** */
/* ------------------------------- EXCEPTION -------------------------------- */
/* ************************************************************************** */

/* exception code */

/* ************************************************************************** */
/* ---------------------------- MEMBER FUNCTION ----------------------------- */
/* ************************************************************************** */
